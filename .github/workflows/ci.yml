name:  CI test

# Trigger on every master branch push and pull request
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Check out my other private repo
      uses: actions/checkout@v3
      with:
         repository: daylight-liontex/WholeSale
         token:      ${{ secrets.my_pat }}
         path:       WholeSale
         
    - name: download latest PBL
      shell: pwsh
      env:   
         PBL_URI:      ${{ secrets.LATEST_PBL_URI }}
         POWERGEN_URI: ${{ secrets.POWERGEN_URI }}
         ACCESS_KEY:   ${{ secrets.JFROG_TOKEN }}
      run:  |
         #Invoke-WebRequest -Uri $env:PBL_URI -OutFile "pbl.zip" -Headers @{ "Authorization" = $env:ACCESS_KEY}
         Invoke-WebRequest -Uri $env:POWERGEN_URI -OutFile "powergen.zip" -Headers @{ "Authorization" = $env:ACCESS_KEY}

    - name: Extract source & compiler
      shell: pwsh
      run:  |
         #Expand-Archive pbl.zip -DestinationPath ./WholeSale/src
         Expand-Archive powergen.zip -DestinationPath ./WholeSale/src
         
         
    - name: Install VcRedist
      shell: pwsh
      run:  |
         Install-Module -Name VcRedist -Force
         New-Item -Path C:\Temp\VcRedist -ItemType Directory
         $VcList = Get-VcList -Release "2005"
         Save-VcRedist -VcList $VcList -Path C:\Temp\VcRedist
         Install-VcRedist -Path C:\Temp\VcRedist -VcList $VcList -Silent

    - name: Prepare
      shell: pwsh
      run:  |
         New-Item -ItemType Junction -Path ./pic -Target ../pic
         & .build\prepare.ps1
      working-directory: ./WholeSale/src
      
    - name: Import PBL & Build EXE
      shell: pwsh
      run:  |
         & .build\sync.ps1
      working-directory: ./WholeSale/src

#    - name: Checkout
#      uses: actions/checkout@v2
#      with:
#        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    - name:  DIR
      shell: pwsh
      run:   Get-ChildItem -Path *.* -Recurse
      working-directory: ./WholeSale/src
    
#    - name:  Archive artifacts
#      shell: pwsh
#      run:   Compress-Archive -Path *.* -DestinationPath artifact.zip
      
#    - name: DIR2
#      run:  dir *.*   

#    - uses: actions/upload-artifact@v1
#      with:
#         name: Upload artifacts
#         path: artifact.zip
